name: Release npm package

on:
  workflow_call:
    inputs:
      path:
        description: "The path to package.json"
        type: string
        required: false
        default: "./package.json"

jobs:
  get-package-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.PACKAGE_VERSION }}
    steps:
      - uses: actions/checkout@v4
      - id: get-version
        run: |
          echo "PACKAGE_VERSION=$(jq -r '.version' $PACKAGE_JSON_PATH)" >> "$GITHUB_OUTPUT"
        env:
          PACKAGE_JSON_PATH: ${{ inputs.path }}

  check-release-exists:
    runs-on: ubuntu-latest
    needs: get-package-version
    outputs:
      released: ${{ steps.check.outputs.RELEASED }}
    steps:
      - id: check
        run: |
          if gh release view "v$PACKAGE_VERSION" > /dev/null 2>&1; then
            echo "RELEASED=true" >> "$GITHUB_OUTPUT"
          else
            echo "RELEASED=false" >> "$GITHUB_OUTPUT"
          fi
        env:
          PACKAGE_VERSION: ${{ needs.get-package-version.outputs.version }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  tagging:
    runs-on: ubuntu-latest
    needs: [get-package-version, check-release-exists]
    if: ${{ needs.check-release-exists.outputs.released == 'false' }}
    steps:
      - uses: actions/checkout@v4
      - run: |
          git tag "v$PACKAGE_VERSION"
          git push --tags origin "v$PACKAGE_VERSION"
        env:
          PACKAGE_VERSION: ${{ needs.get-package-version.outputs.version }}

  create-release:
    runs-on: ubuntu-latest
    needs: [get-package-version, check-release-exists, tagging]
    if: ${{ needs.check-release-exists.outputs.released == 'false' }}
    steps:
      - uses: actions/checkout@v4
      - run: |
          gh release create "v$PACKAGE_VERSION" --generate-notes
        env:
          PACKAGE_VERSION: ${{ needs.get-package-version.outputs.version }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
