name: Tagging and Release

on:
  workflow_call:
    inputs:
      version:
        description: "Version"
        required: true
        type: string
      path:
        description: "The path to package.json"
        type: string
        required: false
        default: "./package.json"

jobs:
  get-default-branch:
    runs-on: ubuntu-latest
    outputs:
      branch_name: ${{ steps.get-name.outputs.DEFAULT_BRANCH_NAME }}
    steps:
      - uses: actions/checkout@v3
      - uses: octokit/request-action@v2.x
        id: repository
        with:
          route: GET /repos/${{ github.repository }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - id: get-name
        run: echo "DEFAULT_BRANCH_NAME=$BRANCH_NAME" >> "$GITHUB_OUTPUT"
        env:
          BRANCH_NAME: ${{ fromJson(steps.repository.outputs.data).default_branch }}

  bump-version:
    runs-on: ubuntu-latest
    needs: get-default-branch
    steps:
      - uses: actions/checkout@v3
      - run: |
          package_version=$(echo ${{ inputs.version }} | sed -E 's/v([0-9.]+)/\1/')
          sed -i -E "s/\"version\": \"[0-9\.]+\",/\"version\": \"$package_version\",/" ${{ inputs.path }}
          # set bot user
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          # commit
          git add .
          git commit -m 'Bump npm package version'
          git push origin "$BRANCH_NAME"
        env:
          BRANCH_NAME: ${{ needs.get-default-branch.outputs.branch_name }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  tagging:
    runs-on: ubuntu-latest
    needs: [get-default-branch, bump-version]
    steps:
      - uses: actions/checkout@v3
      - run: |
          git pull --rebase origin "$BRANCH_NAME"
          git tag ${{ inputs.version }}
          git push --tags origin ${{ inputs.version }}
        env:
          BRANCH_NAME: ${{ needs.get-default-branch.outputs.branch_name }}

  create-release:
    runs-on: ubuntu-latest
    needs: tagging
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - uses: actions/checkout@v3
      - run: |
          gh release create ${{ inputs.version }} --generate-notes

  change-major-version-head:
    runs-on: ubuntu-latest
    needs: [get-default-branch, tagging]
    steps:
      - uses: actions/checkout@v3
      - name: Change HEAD on the minor version branch
        run: |
          git pull --rebase origin "$BRANCH_NAME"
          version=$(echo ${{ inputs.version }} | sed -E "s/(v[0-9]+)\..+/\1/")
          git push --force origin "HEAD:refs/heads/${version}"
        env:
          BRANCH_NAME: ${{ needs.get-default-branch.outputs.branch_name }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
